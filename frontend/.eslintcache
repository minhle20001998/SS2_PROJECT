[{"B:\\projects\\project bitis\\frontend\\src\\index.js":"1","B:\\projects\\project bitis\\frontend\\src\\App.js":"2","B:\\projects\\project bitis\\frontend\\src\\components\\Authentication\\register\\Register.js":"3","B:\\projects\\project bitis\\frontend\\src\\components\\Authentication\\Login\\Login.js":"4"},{"size":153,"mtime":1611326146436,"results":"5","hashOfConfig":"6"},{"size":614,"mtime":1611668591788,"results":"7","hashOfConfig":"6"},{"size":6641,"mtime":1611668591791,"results":"8","hashOfConfig":"6"},{"size":2343,"mtime":1611829641132,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"lib4m2",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"B:\\projects\\project bitis\\frontend\\src\\index.js",[],["20","21"],"B:\\projects\\project bitis\\frontend\\src\\App.js",[],"B:\\projects\\project bitis\\frontend\\src\\components\\Authentication\\register\\Register.js",["22"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            //need to be encrypted\r\n            password: \"\",\r\n            email: \"\"\r\n        }\r\n        this.setName = this.setName.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n        this.setEmail = this.setEmail.bind(this);\r\n        this.fetchRegister = this.fetchRegister.bind(this);\r\n    }\r\n\r\n    //setState for username everytime user types\r\n    setName() {\r\n        const nameInput = document.querySelector('#name_input');\r\n        const checkValid = document.querySelector('#username_validate');\r\n        this.setState({\r\n            username: nameInput.value\r\n        });\r\n        if (this.validateUsername(nameInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:green\">Username is validated</span>';\r\n        } else if (!this.validateUsername(nameInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:red\">Username is not validated</span>';\r\n        }\r\n        if (nameInput.value === \"\") {\r\n            checkValid.textContent = \"\";\r\n        }\r\n    }\r\n\r\n    //setState for password everytime user types\r\n    setPassword() {\r\n        const passwordInput = document.querySelector('#password_input');\r\n        const checkValid = document.querySelector('#password_strength');\r\n\r\n        this.setState({\r\n            password: passwordInput.value\r\n        })\r\n        if (typeof this.checkPasswordStrength(passwordInput.value) == 'string') {\r\n            checkValid.innerHTML = `<span style=\"color:red\">${this.checkPasswordStrength(passwordInput.value)}</span>`\r\n\r\n        } else {\r\n            switch (this.checkPasswordStrength(passwordInput.value)) {\r\n                case 0:\r\n                    checkValid.innerHTML = '<span style=\"color:red\">Your password is very weak</span>'\r\n                    break;\r\n                case 1:\r\n                    checkValid.innerHTML = '<span style=\"color:orange\">Your password is weak</span>'\r\n                    break;\r\n                case 3:\r\n                    checkValid.innerHTML = '<span style=\"color:yellow\">Your password is ok</span>'\r\n                    break;\r\n                case 4:\r\n                    checkValid.innerHTML = '<span style=\"color:green\">Your password is strong</span>'\r\n                    break;\r\n                default:\r\n                    checkValid.innerHTML = \"\";\r\n                    break;\r\n            }\r\n        }\r\n        if (passwordInput.value === \"\") {\r\n            checkValid.innerHTML = \"\";\r\n        }\r\n\r\n    }\r\n\r\n    setEmail() {\r\n        const emailInput = document.querySelector('#email_input');\r\n        const checkValid = document.querySelector('#email_validate');\r\n        this.setState({\r\n            email: emailInput.value\r\n        });\r\n        if (this.validateEmail(emailInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:green\">Email is validated</span>';\r\n        } else if (!this.validateUsername(emailInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:red\">Email is not validated</span>';\r\n        }\r\n        if (emailInput.value === \"\") {\r\n            checkValid.textContent = \"\";\r\n        }\r\n    }\r\n\r\n    //fetch data after user click submit button\r\n    async fetchRegister(e) {\r\n        e.preventDefault();\r\n        const { username, password, email } = this.state;\r\n        if (this.validateUsername(username) === true && (typeof this.checkPasswordStrength(password)) === 'number') {\r\n            //validate name, password\r\n            const url = \"http://localhost:3030/register\";\r\n            const body = {\r\n                username: username,\r\n                password: password,\r\n                email: email\r\n            }\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            const returnMessage = await response.json()\r\n            document.querySelector('#error').textContent = `${returnMessage.message}`\r\n        }\r\n    }\r\n\r\n    //validate username\r\n    //-> must only contains a-z A-Z 0-9 , shift-dash in the middle\r\n    //-> must have 5-50 characters\r\n    validateUsername(username) {\r\n        const pattern = /^(?=[a-zA-Z0-9._]{5,50}$)(?!.*[_.]{2})[^_.].*[^_.]$/;\r\n        return pattern.test(username);\r\n    }\r\n    //check password strength\r\n    //-> must have  6-50 character\r\n    checkPasswordStrength(password) {\r\n        let strength = 0;\r\n        if (password.length < 6) {\r\n            return \"Minimum of password length is 6\"\r\n        }\r\n        if (password.length > 50) {\r\n            return \"Maximum of password length is 50\"\r\n        }\r\n        if (password.match(/[a-z]+/)) {\r\n            strength += 1;\r\n        }\r\n        if (password.match(/[A-Z]+/)) {\r\n            strength += 1;\r\n        }\r\n        if (password.match(/[0-9]+/)) {\r\n            strength += 1;\r\n        }\r\n        if (password.match(/[$@#&!]+/)) {\r\n            strength += 1;\r\n        }\r\n        console.log(\"passstrength: \", strength)\r\n        return strength;\r\n    }\r\n    //\r\n    validateEmail(email) {\r\n        const pattern = /\\S+@\\S+\\.\\S+/;\r\n        return pattern.test(email);\r\n    }\r\n    render() {\r\n        return <div className=\"register\">\r\n            <h1 id=\"error\"></h1>\r\n            <form id=\"register_form\" method=\"POST\" action=\"http://localhost:3030/register\">\r\n                <label htmlFor=\"uname\"><b>Username</b></label>\r\n                <input id='name_input' type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required\r\n                    onInput={this.setName} />\r\n                <div id='username_validate'></div>\r\n\r\n                <label htmlFor=\"psw\"><b>Password</b></label>\r\n                <input id='password_input' type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required\r\n                    onInput={this.setPassword}\r\n                />\r\n                <div id='password_strength'></div>\r\n\r\n                <label htmlFor=\"email\"><b>Email</b></label>\r\n                <input id='email_input' type=\"text\" placeholder=\"Enter Email\" name=\"email\" required\r\n                    onInput={this.setEmail}\r\n                />\r\n                <div id='email_validate'></div>\r\n\r\n                <button type=\"submit\" onClick={this.fetchRegister}>Sign up</button>\r\n            </form>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(Register);","B:\\projects\\project bitis\\frontend\\src\\components\\Authentication\\Login\\Login.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":151,"column":13,"nodeType":"29","endLine":151,"endColumn":28},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]