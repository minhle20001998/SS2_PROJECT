[{"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\index.js":"1","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\App.js":"2","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\Login\\Login.js":"3","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\page\\homepage\\homepage.component.js":"4","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\header\\header.component.js":"5","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\register\\Register.js":"6","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\CustomButton\\customButton.component.js":"7","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\FormInput\\formInput.component.js":"8","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\slideShowGallery\\slideShowGallery.component.js":"9"},{"size":162,"mtime":1611587652426,"results":"10","hashOfConfig":"11"},{"size":982,"mtime":1612143477693,"results":"12","hashOfConfig":"11"},{"size":2851,"mtime":1611936030297,"results":"13","hashOfConfig":"11"},{"size":0,"mtime":1611926934295,"results":"14","hashOfConfig":"11"},{"size":655,"mtime":1611926934292,"results":"15","hashOfConfig":"11"},{"size":7249,"mtime":1611926934290,"results":"16","hashOfConfig":"11"},{"size":253,"mtime":1611926934278,"results":"17","hashOfConfig":"11"},{"size":984,"mtime":1611926934280,"results":"18","hashOfConfig":"11"},{"size":926,"mtime":1612150452251,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"y5e7kj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\index.js",[],["42","43"],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\App.js",["44"],"import React, { Component } from 'react'\r\nimport Register from './components/Authentication/register/Register';\r\nimport Login from './components/Authentication/Login/Login';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport HomePage from './components/page/homepage/homepage.component';\r\nimport Header from './components/header/header.component';\r\nimport SlideShow from './components/slideShowGallery/slideShowGallery.component';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n        <Route exact path=\"/\">\r\n        <Header/>\r\n       </Route>\r\n\r\n          <Route exact path=\"/slide\">\r\n          <SlideShow/>\r\n          </Route>\r\n\r\n          <Route exact path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\Login\\Login.js",["45","46"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport './Login.css';\nimport FormInput from '../FormInput/formInput.component';\nimport CustomButton from '../CustomButton/customButton.component';\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n    this.setName = this.setName.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.fetchLogin = this.fetchLogin.bind(this);\n  }\n\n  setName() {\n    const nameInput = document.querySelector(\"#name_input\");\n    this.setState({\n      username: nameInput.value,\n    });\n  }\n\n  setPassword() {\n    const passwordInput = document.querySelector(\"#password_input\");\n    this.setState({\n      password: passwordInput.value,\n    });\n  }\n\n  async fetchLogin(e) {\n    e.preventDefault();\n    const { username, password } = this.state;\n    const url = \"http://localhost:3030/login\";\n    const body = {\n      username: username,\n      password: password,\n    };\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: 'include',\n      body: JSON.stringify(body),\n    });\n    const returnMessage = await response.json();\n    console.log(returnMessage);\n  }\n\n  render() {\n    return (\n      <div className=\"login\">\n      \n        <form id=\"login_form\">\n        {/* <img src=\"\" alt=\"\"></img> */}\n          <label htmlFor=\"uname\">\n            <b>Username</b>\n            <span className=\"require\">*</span>\n          </label>\n\n\n          \n          <FormInput\n            id=\"name_input\"\n            type=\"text\"\n            placeholder=\"Enter Username\"\n            name=\"uname\"\n            required\n            onInput={this.setName}/>\n          <label htmlFor=\"psw\">\n            <b>Password</b>\n            <span class=\"require\">*</span>\n          </label>\n          <FormInput\n            id=\"password_input\"\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            name=\"psw\"\n            required\n            onInput={this.setPassword}\n          />\n          {/* <input type ='checkbox' />\n          <label> Remember me</label> */}\n          <CustomButton type=\"submit\" onClick={this.fetchLogin}>\n            Login\n          </CustomButton>\n          <br/>\n          <Link to ='/register' class ='linkSignUp'>Sign Up</Link>\n          <div className ='icon'>\n          <img src=\"https://img.icons8.com/color/48/000000/google-logo.png\"/>\n          <img src=\"https://img.icons8.com/color/48/000000/facebook-new.png\"/>\n          </div>\n          {/* <CustomButton >\n            <link to ='/register'> Sign Up</link>\n          </CustomButton> */}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n\n\n\n//làm thêm rememberme\n","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\page\\homepage\\homepage.component.js",[],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\header\\header.component.js",[],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\register\\Register.js",["47","48","49"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport CustomButton from '../CustomButton/customButton.component';\r\nimport FormInput from '../FormInput/formInput.component';\r\nimport './register.style.css';\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            //need to be encrypted\r\n            password: \"\",\r\n            email: \"\"\r\n        }\r\n        this.setName = this.setName.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n        this.setEmail = this.setEmail.bind(this);\r\n        this.fetchRegister = this.fetchRegister.bind(this);\r\n    }\r\n\r\n    //setState for username everytime user types\r\n    setName() {\r\n        const nameInput = document.querySelector('#name_input');\r\n        const checkValid = document.querySelector('#username_validate');\r\n        this.setState({\r\n            username: nameInput.value\r\n        });\r\n        if (this.validateUsername(nameInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:green\">Username is validated</span>';\r\n        } else if (!this.validateUsername(nameInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:red\">Username is not validated</span>';\r\n        }\r\n        if (nameInput.value === \"\") {\r\n            checkValid.textContent = \"\";\r\n        }\r\n    }\r\n\r\n    //setState for password everytime user types\r\n    setPassword() {\r\n        const passwordInput = document.querySelector('#password_input');\r\n        const checkValid = document.querySelector('#password_strength');\r\n\r\n        this.setState({\r\n            password: passwordInput.value\r\n        })\r\n        if (typeof this.checkPasswordStrength(passwordInput.value) == 'string') {\r\n            checkValid.innerHTML = `<span style=\"color:red\">${this.checkPasswordStrength(passwordInput.value)}</span>`\r\n\r\n        } else {\r\n            switch (this.checkPasswordStrength(passwordInput.value)) {\r\n                case 0:\r\n                    checkValid.innerHTML = '<span style=\"color:red\">Your password is very weak</span>'\r\n                    break;\r\n                case 1:\r\n                    checkValid.innerHTML = '<span style=\"color:orange\">Your password is weak</span>'\r\n                    break;\r\n                case 3:\r\n                    checkValid.innerHTML = '<span style=\"color:yellow\">Your password is ok</span>'\r\n                    break;\r\n                case 4:\r\n                    checkValid.innerHTML = '<span style=\"color:green\">Your password is strong</span>'\r\n                    break;\r\n                default:\r\n                    checkValid.innerHTML = \"\";\r\n                    break;\r\n            }\r\n        }\r\n        if (passwordInput.value === \"\") {\r\n            checkValid.innerHTML = \"\";\r\n        }\r\n\r\n    }\r\n\r\n    setEmail() {\r\n        const emailInput = document.querySelector('#email_input');\r\n        const checkValid = document.querySelector('#email_validate');\r\n        this.setState({\r\n            email: emailInput.value\r\n        });\r\n        if (this.validateEmail(emailInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:green\">Email is validated</span>';\r\n        } else if (!this.validateUsername(emailInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:red\">Email is not validated</span>';\r\n        }\r\n        if (emailInput.value === \"\") {\r\n            checkValid.textContent = \"\";\r\n        }\r\n    }\r\n\r\n    //fetch data after user click submit button\r\n    async fetchRegister(e) {\r\n        e.preventDefault();\r\n        const { username, password, email } = this.state;\r\n        if (this.validateUsername(username) === true && (typeof this.checkPasswordStrength(password)) === 'number') {\r\n            //validate name, password\r\n            const url = \"http://localhost:3030/register\";\r\n            const body = {\r\n                username: username,\r\n                password: password,\r\n                email: email\r\n            }\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            const returnMessage = await response.json()\r\n            document.querySelector('#error').textContent = `${returnMessage.message}`\r\n        }\r\n    }\r\n\r\n    //validate username\r\n    //-> must only contains a-z A-Z 0-9 , shift-dash in the middle\r\n    //-> must have 5-50 characters\r\n    validateUsername(username) {\r\n        const pattern = /^(?=[a-zA-Z0-9._]{5,50}$)(?!.*[_.]{2})[^_.].*[^_.]$/;\r\n        return pattern.test(username);\r\n    }\r\n    //check password strength\r\n    //-> must have  6-50 character\r\n    checkPasswordStrength(password) {\r\n        let strength = 0;\r\n        if (password.length < 6) {\r\n            return \"Minimum of password length is 6\"\r\n        }\r\n        if (password.length > 50) {\r\n            return \"Maximum of password length is 50\"\r\n        }\r\n        if (password.match(/[a-z]+/)) {\r\n            strength += 1;\r\n        }\r\n        if (password.match(/[A-Z]+/)) {\r\n            strength += 1;\r\n        }\r\n        if (password.match(/[0-9]+/)) {\r\n            strength += 1;\r\n        }\r\n        if (password.match(/[$@#&!]+/)) {\r\n            strength += 1;\r\n        }\r\n        console.log(\"passstrength: \", strength)\r\n        return strength;\r\n    }\r\n    //\r\n    validateEmail(email) {\r\n        const pattern = /\\S+@\\S+\\.\\S+/;\r\n        return pattern.test(email);\r\n    }\r\n    render() {\r\n        return (\r\n        <div className= \"register\">\r\n            <h1 id=\"error\"></h1>\r\n            <form id=\"register_form\" method=\"POST\" action=\"http://localhost:3030/register\">\r\n                <label htmlFor=\"uname\"><b>Username</b>\r\n                <span class=\"require\">*</span>\r\n</label>\r\n                \r\n                <FormInput id='name_input' type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required\r\n                    onInput={this.setName} />\r\n                <div id='username_validate'></div>\r\n\r\n                <label htmlFor=\"psw\"><b>Password</b>\r\n                <span class=\"require\">*</span>\r\n</label>\r\n                <FormInput id='password_input' type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required\r\n                    onInput={this.setPassword}\r\n                />\r\n                <div id='password_strength'></div>\r\n\r\n                <label htmlFor=\"email\"><b>Email</b> \r\n                <span class=\"require\">*</span> </label>\r\n                <FormInput id='email_input' type=\"text\" placeholder=\"Enter Email\" name=\"email\" required\r\n                    onInput={this.setEmail}\r\n                />\r\n                <div id='email_validate'></div>\r\n\r\n                <CustomButton type=\"submit\" onClick={this.fetchRegister}>Sign up</CustomButton>\r\n                <div className ='icon'>\r\n                <img src=\"https://img.icons8.com/color/48/000000/google-logo.png\"/>\r\n                <img src=\"https://img.icons8.com/color/48/000000/facebook-new.png\"/>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Register);","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\CustomButton\\customButton.component.js",[],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\FormInput\\formInput.component.js",[],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\slideShowGallery\\slideShowGallery.component.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":6,"column":8,"nodeType":"56","messageId":"57","endLine":6,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":92,"column":11,"nodeType":"60","endLine":92,"endColumn":78},{"ruleId":"58","severity":1,"message":"59","line":93,"column":11,"nodeType":"60","endLine":93,"endColumn":79},{"ruleId":"61","severity":1,"message":"62","line":154,"column":13,"nodeType":"60","endLine":154,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":181,"column":17,"nodeType":"60","endLine":181,"endColumn":84},{"ruleId":"58","severity":1,"message":"59","line":182,"column":17,"nodeType":"60","endLine":182,"endColumn":85},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'HomePage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]