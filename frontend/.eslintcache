[{"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\index.js":"1","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\App.js":"2","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\Login\\Login.js":"3","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\register\\Register.js":"4","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\FormInput\\formInput.component.js":"5","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\CustomButton\\customButton.component.js":"6","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\directory\\directory.component.js":"7","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\menu-item\\menu-item.component.js":"8","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\page\\homepage\\homepage.component.js":"9","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\header\\header.component.js":"10"},{"size":162,"mtime":1611587652426,"results":"11","hashOfConfig":"12"},{"size":823,"mtime":1611759148667,"results":"13","hashOfConfig":"12"},{"size":2924,"mtime":1611751643747,"results":"14","hashOfConfig":"12"},{"size":7249,"mtime":1611753833397,"results":"15","hashOfConfig":"12"},{"size":984,"mtime":1611718569067,"results":"16","hashOfConfig":"12"},{"size":253,"mtime":1611718579916,"results":"17","hashOfConfig":"12"},{"size":0,"mtime":1611755466624,"results":"18","hashOfConfig":"12"},{"size":0,"mtime":1611755473892,"results":"19","hashOfConfig":"12"},{"size":0,"mtime":1611755770845,"results":"20","hashOfConfig":"12"},{"size":655,"mtime":1611796622476,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"y5e7kj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\index.js",[],["47","48"],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\App.js",["49"],"import React, { Component } from 'react'\r\nimport Register from './components/Authentication/register/Register';\r\nimport Login from './components/Authentication/Login/Login';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport HomePage from './components/page/homepage/homepage.component';\r\nimport Header from './components/header/header.component';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n        <Route exact path=\"/\">\r\n        <Header></Header>\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\Login\\Login.js",["50","51"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport './Login.css';\r\nimport FormInput from '../FormInput/formInput.component';\r\nimport CustomButton from '../CustomButton/customButton.component';\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n    this.setName = this.setName.bind(this);\r\n    this.setPassword = this.setPassword.bind(this);\r\n    this.fetchLogin = this.fetchLogin.bind(this);\r\n  }\r\n\r\n  setName() {\r\n    const nameInput = document.querySelector(\"#name_input\");\r\n    this.setState({\r\n      username: nameInput.value,\r\n    });\r\n  }\r\n\r\n  setPassword() {\r\n    const passwordInput = document.querySelector(\"#password_input\");\r\n    this.setState({\r\n      password: passwordInput.value,\r\n    });\r\n  }\r\n\r\n  async fetchLogin(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    const url = \"http://localhost:3030/login\";\r\n    const body = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    const returnMessage = await response.json();\r\n    console.log(returnMessage);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n      \r\n        <form id=\"login_form\">\r\n        {/* <img src=\"\" alt=\"\"></img> */}\r\n          <label htmlFor=\"uname\">\r\n            <b>Username</b>\r\n            <span className=\"require\">*</span>\r\n          </label>\r\n          \r\n          <FormInput\r\n            id=\"name_input\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Username\"\r\n            name=\"uname\"\r\n            required\r\n            onInput={this.setName}/>\r\n          <label htmlFor=\"psw\">\r\n            <b>Password</b>\r\n            <span class=\"require\">*</span>\r\n          </label>\r\n          <FormInput\r\n            id=\"password_input\"\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            name=\"psw\"\r\n            required\r\n            onInput={this.setPassword}\r\n          />\r\n          {/* <input type ='checkbox' />\r\n          <label> Remember me</label> */}\r\n          <CustomButton type=\"submit\" onClick={this.fetchLogin}>\r\n            Login\r\n          </CustomButton>\r\n          <br/>\r\n          <Link to ='/register' class ='linkSignUp'>Sign Up</Link>\r\n          <div className ='icon'>\r\n          <img src=\"https://img.icons8.com/color/48/000000/google-logo.png\"/>\r\n          <img src=\"https://img.icons8.com/color/48/000000/facebook-new.png\"/>\r\n          </div>\r\n          {/* <CustomButton >\r\n            <link to ='/register'> Sign Up</link>\r\n          </CustomButton> */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n\r\n\r\n\r\n//làm thêm rememberme\r\n","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\register\\Register.js",["52","53","54"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport CustomButton from '../CustomButton/customButton.component';\r\nimport FormInput from '../FormInput/formInput.component';\r\nimport './register.style.css';\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            //need to be encrypted\r\n            password: \"\",\r\n            email: \"\"\r\n        }\r\n        this.setName = this.setName.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n        this.setEmail = this.setEmail.bind(this);\r\n        this.fetchRegister = this.fetchRegister.bind(this);\r\n    }\r\n\r\n    //setState for username everytime user types\r\n    setName() {\r\n        const nameInput = document.querySelector('#name_input');\r\n        const checkValid = document.querySelector('#username_validate');\r\n        this.setState({\r\n            username: nameInput.value\r\n        });\r\n        if (this.validateUsername(nameInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:green\">Username is validated</span>';\r\n        } else if (!this.validateUsername(nameInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:red\">Username is not validated</span>';\r\n        }\r\n        if (nameInput.value === \"\") {\r\n            checkValid.textContent = \"\";\r\n        }\r\n    }\r\n\r\n    //setState for password everytime user types\r\n    setPassword() {\r\n        const passwordInput = document.querySelector('#password_input');\r\n        const checkValid = document.querySelector('#password_strength');\r\n\r\n        this.setState({\r\n            password: passwordInput.value\r\n        })\r\n        if (typeof this.checkPasswordStrength(passwordInput.value) == 'string') {\r\n            checkValid.innerHTML = `<span style=\"color:red\">${this.checkPasswordStrength(passwordInput.value)}</span>`\r\n\r\n        } else {\r\n            switch (this.checkPasswordStrength(passwordInput.value)) {\r\n                case 0:\r\n                    checkValid.innerHTML = '<span style=\"color:red\">Your password is very weak</span>'\r\n                    break;\r\n                case 1:\r\n                    checkValid.innerHTML = '<span style=\"color:orange\">Your password is weak</span>'\r\n                    break;\r\n                case 3:\r\n                    checkValid.innerHTML = '<span style=\"color:yellow\">Your password is ok</span>'\r\n                    break;\r\n                case 4:\r\n                    checkValid.innerHTML = '<span style=\"color:green\">Your password is strong</span>'\r\n                    break;\r\n                default:\r\n                    checkValid.innerHTML = \"\";\r\n                    break;\r\n            }\r\n        }\r\n        if (passwordInput.value === \"\") {\r\n            checkValid.innerHTML = \"\";\r\n        }\r\n\r\n    }\r\n\r\n    setEmail() {\r\n        const emailInput = document.querySelector('#email_input');\r\n        const checkValid = document.querySelector('#email_validate');\r\n        this.setState({\r\n            email: emailInput.value\r\n        });\r\n        if (this.validateEmail(emailInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:green\">Email is validated</span>';\r\n        } else if (!this.validateUsername(emailInput.value)) {\r\n            checkValid.innerHTML = '<span style=\"color:red\">Email is not validated</span>';\r\n        }\r\n        if (emailInput.value === \"\") {\r\n            checkValid.textContent = \"\";\r\n        }\r\n    }\r\n\r\n    //fetch data after user click submit button\r\n    async fetchRegister(e) {\r\n        e.preventDefault();\r\n        const { username, password, email } = this.state;\r\n        if (this.validateUsername(username) === true && (typeof this.checkPasswordStrength(password)) === 'number') {\r\n            //validate name, password\r\n            const url = \"http://localhost:3030/register\";\r\n            const body = {\r\n                username: username,\r\n                password: password,\r\n                email: email\r\n            }\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            const returnMessage = await response.json()\r\n            document.querySelector('#error').textContent = `${returnMessage.message}`\r\n        }\r\n    }\r\n\r\n    //validate username\r\n    //-> must only contains a-z A-Z 0-9 , shift-dash in the middle\r\n    //-> must have 5-50 characters\r\n    validateUsername(username) {\r\n        const pattern = /^(?=[a-zA-Z0-9._]{5,50}$)(?!.*[_.]{2})[^_.].*[^_.]$/;\r\n        return pattern.test(username);\r\n    }\r\n    //check password strength\r\n    //-> must have  6-50 character\r\n    checkPasswordStrength(password) {\r\n        let strength = 0;\r\n        if (password.length < 6) {\r\n            return \"Minimum of password length is 6\"\r\n        }\r\n        if (password.length > 50) {\r\n            return \"Maximum of password length is 50\"\r\n        }\r\n        if (password.match(/[a-z]+/)) {\r\n            strength += 1;\r\n        }\r\n        if (password.match(/[A-Z]+/)) {\r\n            strength += 1;\r\n        }\r\n        if (password.match(/[0-9]+/)) {\r\n            strength += 1;\r\n        }\r\n        if (password.match(/[$@#&!]+/)) {\r\n            strength += 1;\r\n        }\r\n        console.log(\"passstrength: \", strength)\r\n        return strength;\r\n    }\r\n    //\r\n    validateEmail(email) {\r\n        const pattern = /\\S+@\\S+\\.\\S+/;\r\n        return pattern.test(email);\r\n    }\r\n    render() {\r\n        return (\r\n        <div className= \"register\">\r\n            <h1 id=\"error\"></h1>\r\n            <form id=\"register_form\" method=\"POST\" action=\"http://localhost:3030/register\">\r\n                <label htmlFor=\"uname\"><b>Username</b>\r\n                <span class=\"require\">*</span>\r\n</label>\r\n                \r\n                <FormInput id='name_input' type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required\r\n                    onInput={this.setName} />\r\n                <div id='username_validate'></div>\r\n\r\n                <label htmlFor=\"psw\"><b>Password</b>\r\n                <span class=\"require\">*</span>\r\n</label>\r\n                <FormInput id='password_input' type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required\r\n                    onInput={this.setPassword}\r\n                />\r\n                <div id='password_strength'></div>\r\n\r\n                <label htmlFor=\"email\"><b>Email</b> \r\n                <span class=\"require\">*</span> </label>\r\n                <FormInput id='email_input' type=\"text\" placeholder=\"Enter Email\" name=\"email\" required\r\n                    onInput={this.setEmail}\r\n                />\r\n                <div id='email_validate'></div>\r\n\r\n                <CustomButton type=\"submit\" onClick={this.fetchRegister}>Sign up</CustomButton>\r\n                <div className ='icon'>\r\n                <img src=\"https://img.icons8.com/color/48/000000/google-logo.png\"/>\r\n                <img src=\"https://img.icons8.com/color/48/000000/facebook-new.png\"/>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Register);","D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\FormInput\\formInput.component.js",[],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\Authentication\\CustomButton\\customButton.component.js",[],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\directory\\directory.component.js",[],["55","56"],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\menu-item\\menu-item.component.js",[],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\page\\homepage\\homepage.component.js",[],"D:\\React-Start\\SS2_PROJECT\\frontend\\src\\components\\header\\header.component.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":89,"column":11,"nodeType":"67","endLine":89,"endColumn":78},{"ruleId":"65","severity":1,"message":"66","line":90,"column":11,"nodeType":"67","endLine":90,"endColumn":79},{"ruleId":"68","severity":1,"message":"69","line":154,"column":13,"nodeType":"67","endLine":154,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":181,"column":17,"nodeType":"67","endLine":181,"endColumn":84},{"ruleId":"65","severity":1,"message":"66","line":182,"column":17,"nodeType":"67","endLine":182,"endColumn":85},{"ruleId":"57","replacedBy":"70"},{"ruleId":"59","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'HomePage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["72"],["73"],"no-global-assign","no-unsafe-negation"]